<config>
{
    navigationBarTitleText: 'OZO',
    usingComponents: {
      "prod-card": '~@/components/prod-card',
      "van-row": "~@/components/vant/row",
      "van-col": "~@/components/vant/col",
    }
}
</config>
<template>
  <div class="home">
    <prod-card :prodInfo="prodInfo"></prod-card>
    <div class="buy-list">
      <div class="list-item" v-for="item in buyList" :key="item.id">
        <van-row>
          <van-col span="6">
            <div class="item-avator">
              <image mode="aspectFit" :src="item.goodsPic" />
            </div>
            <div class="item-text">
              {{ item.userInfo.nickName }}
            </div>
          </van-col>
          <van-col span="6">
            <div class="item-text">
              {{
                item.spe1Name + ' / ' + item.spe2Name + ' / ' + item.spe3Name
              }}
            </div>
          </van-col>
          <van-col span="6">
            <div class="item-text">￥{{ item.payAmount }}</div>
          </van-col>
          <van-col span="6">
            <span
              class="item-text"
              style="color: #666; width: 80%; text-align: right"
              >{{ item.diffTime }}</span
            >
          </van-col>
        </van-row>
      </div>
    </div>
  </div>
</template>

<script>
import wepy from '@wepy/core';
import timeMixin from '../../mixins/time.js';
import { getBuyList } from '../../api/order.js';

wepy.page({
  data: {
    page: 1,
    buyList: [],
    prodInfo: {},
  },
  onShow() {
    const eventChannel = this.$wx.getOpenerEventChannel();
    // 通过eventChannel监听a页面传过来的数据
    eventChannel.on('BuyList', (data) => {
      this.prodInfo = data;
      this.getBuyList(data.id);
    });
  },
  methods: {
    // 获取最近购买
    getBuyList(id) {
      getBuyList({
        goodsId: id,
        page: this.page,
        size: 10,
      }).then((res) => {
        if (res.data.code === 1) {
          this.buyList = [...this.buyList, ...res.data.data.records].map(
            (item) => {
              return {
                ...item,
                diffTime: timeMixin.diffTime(item.createTime),
              };
            }
          );
        }
      });
    },
  },
});
</script>
<style lang="less">
.home {
  width: 100%;
  background: #fff;
  .buy-list {
    width: 100%;
    padding: 8rpx 16rpx;
    .list-item {
      width: 100%;
      line-height: 80rpx;
      .item-avator {
        width: 60rpx;
        height: 60rpx;
        overflow: hidden;
        border-radius: 50%;
        display: inline-block;
        vertical-align: middle;
        image {
          width: 100%;
          height: 100%;
        }
      }
      .item-text {
        display: inline-block;
        vertical-align: middle;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        font-size: 28rpx;
        color: #333;
        margin-left: 12rpx;
        text-align: center;
      }
    }
  }
}
</style>
