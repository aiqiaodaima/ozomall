<config>
{
    navigationBarTitleText: '确认订单',
    usingComponents: {
      "van-button": "~@/components/vant/button",
      "van-cell": "~@/components/vant/cell",
      "van-icon": "~@/components/vant/icon",
      "van-toast": "~@/components/vant/toast",
      "van-card": "~@/components/vant/card",
      "van-count-down": "~@/components/vant/count-down",
      "van-dialog": "~@/components/vant/dialog",
    }
}
</config>
<template>
  <div class="home">
    <div class="home-orderStatus">
      {{ orderInfo.statusStr }}
      <div class="home-orderStatus-countDown" v-if="orderInfo.status === 0">
        <van-count-down
          @finish="getOrderInfo(orderInfo.orderNo)"
          format="mm:ss"
          time="{{ countDownTime }}"
        />
      </div>
    </div>
    <div class="home-address">
      <van-cell
        icon="location-o"
        use-label-slot
        :value="orderInfo.addressInfo.phone"
      >
        <div class="home-address-title" slot="title">
          收货人：{{ orderInfo.addressInfo.consignee }}
        </div>
        <div class="home-brand-label" slot="label">
          {{ orderInfo.addressInfo.region }}{{ orderInfo.addressInfo.address }}
        </div>
      </van-cell>
    </div>
    <div class="home-goodsInfo" @tap="toGoodsDetail(orderInfo.goodsId)">
      <van-card
        :price="orderInfo.goodsAmount"
        desc="{{orderInfo.spe1Name + ' ' + orderInfo.spe2Name + ' ' + orderInfo.spe3Name + ' ' + '数量x1'}}"
        :title="orderInfo.goodsName"
        thumb="{{ orderInfo.goodsPic }}"
      />
    </div>
    <div class="home-logistics">
      <van-cell use-label-slot :value="'￥' + orderInfo.freightAmount">
        <div class="home-address-title" slot="title">京东配送</div>
      </van-cell>
      <van-cell use-label-slot :value="'￥' + orderInfo.orderAmount">
        <div class="home-address-title" slot="title">
          <span v-if="orderInfo.payType === 0"> 待支付 </span>
          <span v-else>
            {{ orderInfo.payType === 1 ? '支付宝' : '微信' }}支付
          </span>
        </div>
      </van-cell>
      <van-cell
        v-if="orderInfo.promotionAmount > 0"
        use-label-slot
        :value="'￥' + orderInfo.promotionAmount"
      >
        <div class="home-address-title" slot="title">优惠金额</div>
      </van-cell>
      <van-cell use-label-slot :value="'￥' + orderInfo.payAmount">
        <div class="home-address-title" slot="title">合计支付</div>
      </van-cell>
    </div>
    <div class="home-logistics">
      <van-cell use-label-slot :value="orderInfo.orderNo">
        <div class="home-address-title" slot="title">订单编号</div>
      </van-cell>
      <van-cell use-label-slot :value="orderInfo.createTime">
        <div class="home-address-title" slot="title">创建时间</div>
      </van-cell>
      <van-cell v-if="orderInfo.status !== 0" use-label-slot :value="orderInfo.createTime">
        <div class="home-address-title" slot="title">交易编号</div>
      </van-cell>
    </div>
    <div class="home-btn" v-if="orderInfo.status === 0">
      <div class="home-btn-ff" @tap="closeOrder">取消订单</div>
      <div class="home-btn-buy" @tap="placeOrder">立即付款</div>
    </div>
    <div
      class="home-btn"
      v-else-if="orderInfo.status === 1 || orderInfo.status === 2"
    >
      <div class="home-btn-buy" @tap="addOrder">确认收货</div>
    </div>
    <div class="home-btn" v-else>
      <div class="home-btn-ff">删除订单</div>
    </div>
    <van-toast id="van-toast" />
    <!-- 消息确认 -->
    <van-dialog id="van-dialog" />
  </div>
</template>

<script>
import wepy from '@wepy/core';
import jumpMixin from '../../mixins/jump.js';
import Dialog from '../../components/vant/dialog/dialog.js';
import Toast from '../../components/vant/toast/toast.js';
import { getByOrderNo, getOrderTimer, closeOrder } from '../../api/order.js';
import { unifiedorder, orderquery } from '../../api/pay.js';
import pay from '../../utils/pay.js';

wepy.page({
  mixins: [jumpMixin],
  data: {
    orderNo: '',
    orderInfo: {},
    countDownTime: 0,
  },
  onLoad() {},
  onShow() {
    let eventChannel = this.$wx.getOpenerEventChannel();
    // 通过eventChannel监听a页面传过来的数据
    eventChannel.on('orderNo', (data) => {
      this.getOrderInfo(data.orderNo);
    });
  },
  // 监听页面卸载
  onUnload: function () {
    let pages = getCurrentPages();
    let prev = pages[pages.length - 2];
    if (prev.route.includes('confirm')) {
      wx.navigateBack({ delta: 1 });
    }
  },
  methods: {
    // 订单状态过滤器
    statusFilter(val) {
      switch (val - 0) {
        case 0:
          return '您有待付款订单';
          break;
        case 1:
          return '您有待发货订单';
          break;
        case 2:
          return '您有待收货订单';
          break;
        case 3:
          return '交易成功';
          break;
        case 4:
          return '交易关闭';
          break;
        default:
          return '---';
          break;
      }
    },
    // 获取订单详情
    getOrderInfo(orderNo) {
      this.orderInfo = {};
      getByOrderNo({
        orderNo,
      }).then((res) => {
        if (res.data.code === 1) {
          this.orderInfo = {
            ...res.data.data,
            statusStr: this.statusFilter(res.data.data.status),
          };
          if (res.data.data.status === 0) {
            this.getOrderTimer(res.data.data.orderNo);
          }
        }
      });
    },
    // 根据订单编号查询未支付订单倒计时
    getOrderTimer(orderNo) {
      getOrderTimer({
        orderNo,
      }).then((res) => {
        if (res.data.code === 1) {
          let countDown = 3 * 60 * 1000; // 倒计时15分钟
          let countDownStart = res.data.data.countDown - 0; // 倒计时开始时间
          let countDownNow = new Date().getTime();
          this.countDownTime =
            3000 + countDown - (countDownNow - countDownStart);
        }
      });
    },
    // 跳转商品详情页
    toGoodsDetail(id) {
      wx.navigateTo({
        url: '/pages/prodDetails/index',
        success: function (routeRes) {
          // 通过eventChannel向b页面传送数据
          routeRes.eventChannel.emit('goodsData', { id });
        },
      });
    },
    // 关闭订单
    closeOrder() {
      Dialog.confirm({
        message: '确认取消订单？',
      })
        .then(() => {
          closeOrder({
            orderNo: this.orderInfo.orderNo,
          }).then((res) => {
            if (res.data.code === 1) {
              this.getOrderInfo(this.orderInfo.orderNo);
            }
          });
        })
        .catch(() => {
          // on cancel
        });
    },
    // 微信支付统一下单
    placeOrder() {
      let user = wx.getStorageSync('users');
      Toast.loading({
        message: '正在进行支付',
        forbidClick: true,
      });
      unifiedorder({
        orderNo: this.orderInfo.orderNo,
        openid: user.openId,
      }).then((res) => {
        if (res.data.code === 1) {
          pay.pay(res.data.data).then((res) => {
            // 支付完成查询微信订单
            orderquery({
              orderNo: this.orderInfo.orderNo,
            }).then((res) => {
              this.getOrderInfo(this.orderInfo.orderNo);
            });
          });
        }
        Toast.clear();
      });
    },
  },
});
</script>
<style lang="less">
.home {
  width: 100%;
  height: 100%;
  background: #eeeef0;
  .home-orderStatus {
    width: 100%;
    height: 200rpx;
    line-height: 200rpx;
    background: #2c2b3b;
    padding-top: 10rpx;
    padding-bottom: 10rpx;
    padding-left: 40rpx;
    color: #fff;
    font-size: 40rpx;
    font-weight: 600;
    position: relative;
    .home-orderStatus-countDown {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      right: 20rpx;
      color: #fff;
      font-size: 28rpx;
      .van-count-down {
        color: #fff;
      }
    }
  }
  .home-address {
    width: 100%;
    background: #fff;
    padding-top: 10rpx;
    padding-bottom: 10rpx;
  }
  .home-goodsInfo {
    padding-top: 10rpx;
    padding-bottom: 10rpx;
    background: #fff;
    margin-top: 4rpx;
    .van-card {
      background: #fff;
    }
  }
  .home-logistics {
    width: 100%;
    margin-top: 4rpx;
    padding-top: 10rpx;
    padding-bottom: 10rpx;
    .home-address-right-icon {
      border: 1px solid #e2e2e2;
      padding: 0rpx 6rpx;
      font-size: 24rpx;
      color: #999;
    }
  }
  .home-btn {
    width: 100%;
    background: #fff;
    position: fixed;
    bottom: 0;
    left: 0;
    padding-top: 20rpx;
    padding-bottom: 20rpx;
    text-align: right;
    .home-btn-ff {
      width: 200rpx;
      height: 80rpx;
      line-height: 80rpx;
      text-align: center;
      background: #fff;
      color: #666;
      margin-right: 40rpx;
      border: 1px solid #e2e2e2;
      display: inline-block;
      vertical-align: middle;
    }
    .home-btn-buy {
      width: 200rpx;
      height: 80rpx;
      line-height: 80rpx;
      text-align: center;
      background: #11cccc;
      color: #fff;
      margin-right: 40rpx;
      display: inline-block;
      vertical-align: middle;
    }
  }
}
</style>
