<config>
{
    navigationBarTitleText: '我的购买',
    enablePullDownRefresh: true,
    backgroundColor: '#242424',
    backgroundTextStyle: 'light',
     usingComponents: {
      "van-tab": "~@/components/vant/tab",
      "van-tabs": "~@/components/vant/tabs",
      "van-card": "~@/components/vant/card",
    }
}
</config>
<template>
  <div class="order">
    <div class="order-header">
      <van-tabs active="{{ status }}" @change="onChange">
        <van-tab :name="0" title="待付款"></van-tab>
        <van-tab :name="1" title="待发货"></van-tab>
        <van-tab :name="2" title="待收货"></van-tab>
        <van-tab :name="4" title="全部订单"></van-tab>
      </van-tabs>
    </div>
    <div class="order-list">
      <scroll-view
        class="scroll-view_H"
        scroll-y="true"
        style="height:{{scrollHeight}}rpx;"
        lower-threshold="50"
        bindscrolltolower="scrolltolower"
      >
        <div
          class="order-item"
          v-for="item in orderList"
          :key="item.id"
          @tap="toOrderDetail(item)"
        >
          <div class="item-status">{{ item.statusName }}</div>
          <div class="item-content">
            <van-card
              :price="item.goodsPrice"
              desc="{{item.spe1Name + ' ' + item.spe2Name + ' ' + item.spe3Name + ' ' + '数量x1'}}"
              :title="item.goodsName"
              thumb="{{ item.goodsPic }}"
            />
          </div>
          <div class="item-btn">
            <div class="item-btn-ok" v-if="item.status === 0">立即付款</div>
            <div class="item-btn-ok" v-if="item.status === 1">提醒发货</div>
            <div class="item-btn-ok" v-if="item.status === 2">确认收货</div>
          </div>
        </div>
      </scroll-view>
    </div>
  </div>
</template>

<script>
import wepy from '@wepy/core';
import { getOrder } from '../../api/order.js';

wepy.page({
  data: {
    page: 1,
    scrollHeight: 0,
    timer: null,
    status: 4, // 订单状态
    orderList: [],
  },
  onShow(option) {
    this.computedScroll();
    let eventChannel = this.$wx.getOpenerEventChannel();
    eventChannel.on('orderStatus', (data) => {
      this.status = data.orderStatus;
      if (this.status === 4) {
        this.getOrder();
      }
    });
  },
  onPullDownRefresh() {
    this.page = 1;
    this.orderList = [];
    this.getOrder();
  },
  methods: {
    // 订单状态过滤器
    statusFilter(val) {
      switch (val - 0) {
        case 0:
          return '您有待付款订单';
          break;
        case 1:
          return '您有待发货订单';
          break;
        case 2:
          return '您有待收货订单';
          break;
        case 3:
          return '交易成功';
          break;
        case 4:
          return '交易关闭';
          break;
        default:
          return '---';
          break;
      }
    },
    // 计算scroll高度
    computedScroll() {
      let h = wx.getSystemInfoSync().windowHeight;
      this.scrollHeight = (h - 54) * 2;
    },
    // 切换订单状态
    onChange(e) {
      this.status = e.$wx.detail.name;
      this.page = 1;
      this.orderList = [];
      this.getOrder();
    },
    // 获取订单
    getOrder() {
      let users = wx.getStorageSync('users');
      getOrder({
        page: this.page,
        size: 10,
        del: 0,
        userId: users.id,
        status: this.status === 4 ? null : this.status,
      }).then((res) => {
        if (res.data.code === 1) {
          this.orderList = [...this.orderList, ...res.data.data.records].map(
            (item) => {
              return {
                ...item,
                statusName: this.statusFilter(item.status),
              };
            }
          );
          this.page = Math.ceil(this.orderList.length / 10);
        }
      });
    },
    // 滚动加载
    scrolltolower() {
      if (!this.timer) {
        this.page++;
        this.getOrder();
        this.timer = setTimeout(() => {
          clearTimeout(this.timer);
          this.timer = null;
        }, 2000);
      } else {
        return false;
      }
    },
    // 跳转订单详情
    toOrderDetail(row) {
      wx.navigateTo({
        url: '/pages/order/detail',
        success: function (res) {
          // 通过eventChannel向被打开页面传送数据
          res.eventChannel.emit('orderNo', { orderNo: row.orderNo });
        },
      });
    },
  },
});
</script>
<style lang="less">
.order {
  width: 100%;
  height: 100%;
  background: #eeeef0;
  padding-top: 90rpx;
  .order-header {
    width: 100%;
    background: #fff;
    position: fixed;
    top: 0;
    left: 0;
  }
  .order-list {
    width: 100%;
    margin-top: 10rpx;
    .order-item {
      width: 100%;
      padding-left: 20rpx;
      padding-right: 20rpx;
      background: #fff;
      margin-top: 4rpx;
      .item-status {
        width: 100%;
        height: 80rpx;
        line-height: 80rpx;
        border: 2rpx solid #f5f5f5;
        color: #666;
        font-size: 28rpx;
      }
      .item-content {
        width: 100%;
        padding-top: 10rpx;
        background: #fff;
        .van-card {
          background: #fff;
        }
      }
      .item-btn {
        width: 100%;
        padding-top: 10rpx;
        padding-bottom: 10rpx;
        border-top: 2rpx solid #f5f5f5;
        overflow: hidden;
        .item-btn-ok {
          float: right;
          padding: 12rpx 20rpx;
          text-align: center;
          font-size: 28rpx;
          color: #fff;
          margin-right: 40rpx;
          background: #11cccc;
        }
      }
    }
  }
}
</style>
